/* SettingsModal 模块样式 */
.settingsModal {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  position: relative;
  color: var(--text-primary);
}

.section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  padding-bottom: 1.5rem;
  background: rgba(30, 30, 30, 0.3);
  backdrop-filter: blur(8px);
  border-radius: 8px;
  padding: 1.25rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s, box-shadow 0.2s;
}

.section:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
}

.section:last-child {
  border-bottom: none;
}

.sectionTitle {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.sectionIcon {
  width: 1.25rem;
  height: 1.25rem;
  color: var(--accent-color, #6b57ff);
}

.field {
  display: flex;
  align-items: center;
  padding: 0.625rem;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 6px;
  transition: background-color 0.2s;
}

.field:hover {
  background: rgba(0, 0, 0, 0.3);
}

.field label {
  flex: 1;
  color: var(--text-secondary);
  font-size: 0.95rem;
}

.fieldControl {
  flex: 2;
  display: flex;
  align-items: center;
}

.fieldControl select {
  padding: 0.5rem 0.75rem;
  border-radius: 6px;
  background-color: rgba(0, 0, 0, 0.4);
  color: var(--text-primary);
  border: 1px solid rgba(255, 255, 255, 0.1);
  width: 100%;
  backdrop-filter: blur(4px);
  transition: border-color 0.2s, box-shadow 0.2s;
}

.fieldControl select:hover {
  border-color: rgba(255, 255, 255, 0.2);
}

.fieldControl select:focus {
  border-color: var(--accent-color, #6b57ff);
  outline: none;
  box-shadow: 0 0 0 2px rgba(107, 87, 255, 0.2);
}

.fieldControl select:disabled,
.fieldControl input:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.fieldControl input[type="checkbox"] {
  appearance: none;
  width: 1.25rem;
  height: 1.25rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 4px;
  margin-right: 0.75rem;
  position: relative;
  cursor: pointer;
  transition: all 0.2s;
}

.fieldControl input[type="checkbox"]:checked {
  background-color: var(--accent-color, #6b57ff);
  border-color: var(--accent-color, #6b57ff);
}

.fieldControl input[type="checkbox"]:checked::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(45deg);
  width: 0.3rem;
  height: 0.6rem;
  border-bottom: 2px solid white;
  border-right: 2px solid white;
}

.fieldControl input[type="number"] {
  padding: 0.5rem 0.75rem;
  border-radius: 6px;
  background-color: rgba(0, 0, 0, 0.4);
  color: var(--text-primary);
  border: 1px solid rgba(255, 255, 255, 0.1);
  width: 80px;
  backdrop-filter: blur(4px);
  transition: border-color 0.2s, box-shadow 0.2s;
}

.fieldControl input[type="number"]:focus {
  border-color: var(--accent-color, #6b57ff);
  outline: none;
  box-shadow: 0 0 0 2px rgba(107, 87, 255, 0.2);
}

.unit {
  margin-left: 0.625rem;
  color: var(--text-secondary);
  font-size: 0.9rem;
}

.checkboxLabel {
  font-size: 0.95rem;
  color: var(--text-primary);
}

.sectionAbout {
  text-align: center;
}

.aboutInfo {
  display: flex;
  flex-direction: column;
  gap: 0.375rem;
  color: var(--text-secondary);
  font-size: 0.95rem;
}

.version {
  color: var(--accent-color, #6b57ff);
  font-weight: 500;
}

.copyright {
  font-size: 0.85rem;
  opacity: 0.7;
}

.loadingOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(8px);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  border-radius: 8px;
}

.loadingSpinner {
  width: 48px;
  height: 48px;
  border: 3px solid rgba(107, 87, 255, 0.3);
  border-radius: 50%;
  border-top-color: var(--accent-color, #6b57ff);
  animation: spin 0.8s linear infinite;
  margin-bottom: 1rem;
  box-shadow: 0 0 20px rgba(107, 87, 255, 0.3);
}

.loadingText {
  color: white;
  font-size: 1rem;
  font-weight: 500;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

.errorMessage {
  background-color: rgba(239, 68, 68, 0.15);
  color: #ef4444;
  padding: 0.875rem 1.125rem;
  border-radius: 8px;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  border: 1px solid rgba(239, 68, 68, 0.2);
  backdrop-filter: blur(4px);
}

.errorMessage svg {
  margin-right: 0.625rem;
  flex-shrink: 0;
  width: 1.375rem;
  height: 1.375rem;
}

.resetButton {
  justify-content: flex-end;
  margin-top: 0.75rem;
}

.resetButtonControl {
  background-color: rgba(0, 0, 0, 0.4);
  border: 1px solid rgba(255, 255, 255, 0.15);
  color: var(--text-secondary);
  padding: 0.625rem 1.25rem;
  border-radius: 6px;
  font-size: 0.95rem;
  cursor: pointer;
  transition: all 0.2s ease;
  backdrop-filter: blur(4px);
}

.resetButtonControl:hover {
  background-color: rgba(255, 255, 255, 0.05);
  color: var(--text-primary);
  border-color: rgba(255, 255, 255, 0.3);
}

.resetButtonControl:active {
  transform: translateY(1px);
}

.resetButtonControl:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}