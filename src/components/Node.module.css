/*
 * 节点样式统一设计系统 - 增强版
 * 为所有节点类型提供一致的视觉风格
 */

/* 基础节点容器 */
.node {
  overflow: hidden;
  user-select: none;
  position: relative;
  background-color: var(--node-bg, #2a2a34);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  min-width: 240px;
  font-family: var(--font-sans, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif);
}

/* 悬停状态 */
.node:hover {
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.4);
  transform: translateY(-2px);
}

/* 选中状态 */
.node.selected {
  border-color: var(--primary-color, #3d90f5);
  box-shadow: 0 0 0 2px rgba(61, 144, 245, 0.4), 0 8px 16px rgba(0, 0, 0, 0.4);
}

/* 节点头部 */
.nodeHeader {
  background-color: var(--node-header-bg, #32323e);
  padding: 10px 14px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid var(--node-border, #3a3a48);
  position: relative;
  overflow: hidden;
}

/* 节点标题 */
.nodeTitle {
  font-weight: 600;
  font-size: 14px;
  color: var(--node-title-color, #f5f5f7);
  flex: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  position: relative;
  z-index: 1;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  letter-spacing: 0.3px;
}

/* 节点内容区域 */
.nodeContent {
  padding: 14px;
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.03), transparent);
}

/* 节点操作按钮容器 */
.nodeActions {
  display: flex;
  gap: 6px;
}

/* 节点操作按钮 */
.nodeActionButton {
  background: none;
  border: none;
  color: var(--node-icon-color, #b3b3c0);
  cursor: pointer;
  opacity: 0.7;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  padding: 0;
  border-radius: 4px;
  font-size: 16px;
}

.nodeActionButton:hover {
  opacity: 1;
  background-color: rgba(255, 255, 255, 0.15);
  color: var(--node-icon-hover, #f5f5f7);
  transform: scale(1.1);
}

/* 调整大小的手柄 */
.resizeHandle {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 18px;
  height: 18px;
  cursor: nwse-resize;
  opacity: 0.5;
  transition: all 0.2s ease;
  background-image: radial-gradient(circle, var(--node-text-color-secondary, #aaa) 1px, transparent 1px);
  background-size: 4px 4px;
  background-position: bottom right;
  border-radius: 0 0 6px 0;
}

.resizeHandle:hover,
.resizing .resizeHandle {
  opacity: 1;
  background-color: rgba(255, 255, 255, 0.1);
}

/* 输入输出容器 */
.portsContainer {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-bottom: 12px;
}

/* 端口标题 */
.sectionTitle {
  font-size: 12px;
  font-weight: 600;
  color: var(--node-label-color, #b3b3c0);
  margin-bottom: 8px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 1px dashed rgba(170, 170, 170, 0.2);
  padding-bottom: 4px;
}

/* 端口组 */
.portContainer {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

/* 单个端口 */
.port {
  display: flex;
  align-items: center;
  position: relative;
  height: 32px;
  padding-left: 4px;
  border-radius: 4px;
  transition: background-color 0.2s;
}

.port:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

/* 端口连接点 */
.portDot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: var(--port-color, #7a7a8c);
  margin-right: 8px;
  transition: all 0.2s;
  border: 2px solid transparent;
}

.portDot:hover,
.portConnected .portDot {
  background-color: var(--port-connected, #3d90f5);
  box-shadow: 0 0 0 2px rgba(61, 144, 245, 0.3);
}

/* 端口标签 */
.portLabel {
  color: var(--node-text-color, #e0e0e5);
  font-size: 13px;
  flex: 1;
}

/* 可折叠节点状态 */
.collapsed .nodeContent {
  display: none;
}

/* 节点类型特定样式 - 根据节点类型应用不同的边框色和微妙视觉差异 */

/* 输入节点 */
.inputNode {
  border-left: 3px solid var(--input-node-color, #4caf50);
}
.inputNode .nodeHeader {
  background-color: rgba(76, 175, 80, 0.15);
}

/* 输出节点 */
.outputNode {
  border-left: 3px solid var(--output-node-color, #ff9800);
}
.outputNode .nodeHeader {
  background-color: rgba(255, 152, 0, 0.15);
}

/* 模型节点 */
.modelNode {
  border-left: 3px solid var(--model-node-color, #3d90f5);
}
.modelNode .nodeHeader {
  background-color: rgba(61, 144, 245, 0.15);
}

/* 处理节点 */
.processingNode {
  border-left: 3px solid var(--processing-node-color, #9c27b0);
}
.processingNode .nodeHeader {
  background-color: rgba(156, 39, 176, 0.15);
}

/* 逻辑节点 */
.logicNode {
  border-left: 3px solid var(--logic-node-color, #f44336);
}
.logicNode .nodeHeader {
  background-color: rgba(244, 67, 54, 0.15);
}

/* 工具节点 */
.utilityNode {
  border-left: 3px solid var(--utility-node-color, #607d8b);
}
.utilityNode .nodeHeader {
  background-color: rgba(96, 125, 139, 0.15);
}

/* 用户界面节点 */
.uiNode {
  border-left: 3px solid var(--ui-node-color, #e91e63);
}
.uiNode .nodeHeader {
  background-color: rgba(233, 30, 99, 0.15);
}

/* 禁用状态 */
.nodeDisabled {
  opacity: 0.6;
  pointer-events: none;
}

/* 错误状态 */
.nodeError {
  border-color: var(--error-color, #f44336);
  box-shadow: 0 0 0 1px var(--error-color, #f44336);
}
.nodeError .nodeHeader {
  background-color: rgba(244, 67, 54, 0.2);
}

/* 节点状态样式 */
.node.running {
  border-color: var(--primary-color, #10a37f);
  box-shadow: 0 0 0 2px var(--primary-color, #10a37f), 0 0 15px rgba(16, 163, 127, 0.5);
  animation: pulse 2s infinite;
}

.node.completed {
  border-color: var(--success-color, #2ecc71);
  box-shadow: 0 0 0 2px var(--success-color, #2ecc71), 0 0 10px rgba(46, 204, 113, 0.4);
}

.node.error {
  border-color: var(--error-color, #e74c3c);
  box-shadow: 0 0 0 2px var(--error-color, #e74c3c), 0 0 10px rgba(231, 76, 60, 0.4);
}

/* 节点加载状态 */
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(16, 163, 127, 0.4);
  }
  70% {
    box-shadow: 0 0 0 6px rgba(16, 163, 127, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(16, 163, 127, 0);
  }
}

.nodeLoading {
  animation: pulse 2s infinite ease-in-out;
}

/* 动画效果 */
.nodeAppear {
  animation: nodeAppear 0.3s ease-out forwards;
}

@keyframes nodeAppear {
  from {
    opacity: 0;
    transform: scale(0.9) translateY(10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

/* 深色模式适配 */
@media (prefers-color-scheme: dark) {
  .node {
    background-color: var(--node-bg-dark, #252530);
    border-color: var(--node-border-dark, #35354a);
  }

  .nodeHeader {
    background-color: var(--node-header-bg-dark, #2c2c38);
  }
}